// <auto-generated />
using System;
using IriOnCocktailService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IriOnCocktailService.Data.Migrations
{
    [DbContext(typeof(IriOnCocktailServiceDbContext))]
    [Migration("20191124141559_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.Bar", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Motto");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("NotAvailable");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PicUrl")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Bars");

                    b.HasData(
                        new
                        {
                            Id = "56d9e733-b150-45c4-8b87-f5a5e31bc23b",
                            Address = "Neofit Rilski 70 str.",
                            Motto = "Here’s to what I won’t remember.",
                            Name = "Camino Piano Bar",
                            NotAvailable = false,
                            PhoneNumber = "0899 121 219",
                            PicUrl = "https://www.bar.bg/img/entities/391/thumbnails/1460717284_thumbnail_piano%20Bar%20Camino%20Sofia%20Bar.bg%20%20%286%29.jpg"
                        },
                        new
                        {
                            Id = "cdb2058c-0600-497d-b48d-f89d8cb4aaed",
                            Address = "Aksakov 18 str.",
                            Motto = "It’s not just a bar, it’s a destination!",
                            Name = "Motto",
                            NotAvailable = false,
                            PhoneNumber = "02 987 27 23",
                            PicUrl = "https://www.bar.bg/img/entities/344/thumbnails/1460948353_thumbnail_Motto%20Sofia%20bar%20and%20dinner%20%289%29.jpg"
                        },
                        new
                        {
                            Id = "6e1ce019-108e-4ded-b308-486831d19e08",
                            Address = "Lege 8 str.",
                            Motto = "Keep Calm and Party On.",
                            Name = "Magnito",
                            NotAvailable = false,
                            PhoneNumber = "0888 144 777",
                            PicUrl = "https://www.bar.bg/img/entities/334/12.jpg"
                        },
                        new
                        {
                            Id = "d886baac-17e6-49dd-93ec-b5ecadc14e06",
                            Address = "Moskovska 6A str.",
                            Motto = "Less thinking more drinking.",
                            Name = "Tobacco Garden Bar",
                            NotAvailable = false,
                            PhoneNumber = "0884 600 044",
                            PicUrl = "https://www.bar.bg/img/entities/399/thumbnails/1465627827_thumbnail_Tobacco%20by%20night%20%281%29.jpg"
                        },
                        new
                        {
                            Id = "648ba3bd-70ae-4277-aa40-2da5ab120fa9",
                            Address = "Nikola Vaptsarov 35 bul",
                            Motto = "Old school bar for the modern man.",
                            Name = "The Corner",
                            NotAvailable = false,
                            PhoneNumber = "0884 555 444",
                            PicUrl = "https://www.bar.bg/img/entities/301/thumbnails/1465991940_thumbnail_The%20corner%20sofia%20%285%29.JPG"
                        },
                        new
                        {
                            Id = "0086952e-e33e-4daa-a678-d715afb9ce92",
                            Address = "Malko Tarnovo 1 str.",
                            Motto = "Shut up and drink.",
                            Name = "After Five",
                            NotAvailable = false,
                            PhoneNumber = "0889 044 124",
                            PicUrl = "https://www.bar.bg/img/entities/514/thumbnails/1542282996_thumbnail_45587111_10155553340756402_8161139793200152576_o.jpg"
                        },
                        new
                        {
                            Id = "2600172c-9d3e-4143-850e-aeb80e2a1276",
                            Address = "Bitolya 2 str.",
                            Motto = "The luck is gone, the brain is shot, but the liquor we still got.",
                            Name = "Ginger",
                            NotAvailable = false,
                            PhoneNumber = "087 733 7337",
                            PicUrl = "https://www.bar.bg/img/entities/309/thumbnails/1543487164_thumbnail_46508867_945234368933866_6411033979784265728_o.jpg"
                        },
                        new
                        {
                            Id = "b14aaaf8-5cf8-4c3d-b082-e18afa02f563",
                            Address = "Vitosha 16 str.",
                            Motto = "The problem with the world is that everyone is a few drinks behind.",
                            Name = "Sinatra",
                            NotAvailable = false,
                            PhoneNumber = "087 676 7647",
                            PicUrl = "https://scontent.fsof10-1.fna.fbcdn.net/v/t1.0-9/69596049_2511881822225915_3748776760234213376_o.jpg?_nc_cat=106&_nc_ohc=tXMpZ5pg5EsAQm6ITiX6rG7SzNUjVkk6VofwaXC1Qg2DMgADPB9ShY55Q&_nc_ht=scontent.fsof10-1.fna&oh=5481adeb4d42c82c2e7e31e9fd8e0180&oe=5E8147BB"
                        },
                        new
                        {
                            Id = "5182e54c-ed6f-487f-b205-75649ef9ea2e",
                            Address = "Arsenalski 2 bul.",
                            Motto = "Hiding from wife.",
                            Name = "Cache",
                            NotAvailable = false,
                            PhoneNumber = "089 446 4169",
                            PicUrl = "https://www.bar.bg/img/entities/392/thumbnails/1460819224_thumbnail_Bar%20Cache%20Sofia%20opening%20%281%29.jpg"
                        },
                        new
                        {
                            Id = "091bf67e-532c-498e-9a40-5f625ccee2e2",
                            Address = "Angel Kanchev 1 str.",
                            Motto = "What happens at the reception stays at the reception.",
                            Name = "Public Bar",
                            NotAvailable = false,
                            PhoneNumber = "088 433 3781",
                            PicUrl = "https://www.bar.bg/img/entities/443/thumbnails/1495192251_thumbnail_public%20bar%20sofia%20special%20moments%20%283%29.jpg"
                        });
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.BarComment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BarId");

                    b.HasIndex("UserId");

                    b.ToTable("BarComments");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.BarRating", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("BarId");

                    b.Property<string>("Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserId", "BarId");

                    b.HasIndex("BarId");

                    b.ToTable("BarRatings");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.Cocktail", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Motto");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("NotAvailable");

                    b.Property<string>("PicUrl")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cocktails");

                    b.HasData(
                        new
                        {
                            Id = "26531c92-59cd-4503-86c9-17ab02d0e4c1",
                            Motto = "H.L Mencken called the Martini \"the only American invention as perfect as the sonnet\".",
                            Name = "Dry Martini",
                            NotAvailable = false,
                            PicUrl = "https://www.bascofinefoods.com/spanish-recipes-wpfiles/wp-content/uploads/2015/07/dry_martini_recipe-e1505646628151.jpg"
                        },
                        new
                        {
                            Id = "11b8db86-d375-4cde-81c5-66be2938acdd",
                            Motto = "Due to Roosevelt`s Good Neighbour policy (which opened up trade with Cuba, Latin America and the Carribean) rum became easily obtainable in the 1940S and this helped drive the popularity of the daiquiri in the US.",
                            Name = "Daiquiri",
                            NotAvailable = false,
                            PicUrl = "https://www.thespruceeats.com/thmb/XmHuAIwiqm_YMOsF6lmFCswLYt4=/960x0/filters:no_upscale():max_bytes(150000):strip_icc()/hemingway-daiquiri-recipe-760527-Hero-5bbfa3c2c9e77c0052b8b7d2.jpg"
                        },
                        new
                        {
                            Id = "77c8a1f5-66f6-4c5d-b06d-1ad0cdd1097d",
                            Motto = "Coffee is the second most traded commodity on earth.",
                            Name = "Esspresso Martini",
                            NotAvailable = false,
                            PicUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRcI5X1cmG98KMGYLkMkls8vGbKLdBkSTJf8JsM6m9oMatX6TBI&s"
                        },
                        new
                        {
                            Id = "ff98b546-3f4d-486c-acaf-6da5a2d1f4fc",
                            Motto = "The name references the combinations age, as it is perhaps the first drink to be called a cocktail.",
                            Name = "Old Fashioned",
                            NotAvailable = false,
                            PicUrl = "http://res.cloudinary.com/hjqklbxsu/image/upload/f_auto,fl_lossy,q_auto/v1536680101/social-share/JDSB_OldFashioned_DigitalRecipePost.jpg"
                        },
                        new
                        {
                            Id = "42cd2509-9e0d-4451-b20b-4822931ac723",
                            Motto = "The Cosmopolitan gained significant popularity in the 1990s partly due to the fact that Sarah Jessica Parkers character, Carrie Bradshaw, in the hit televsion programme, \"Sex in the City\", often ordered the drink.",
                            Name = "Cosmopolitan",
                            NotAvailable = false,
                            PicUrl = "https://peopledotcom.files.wordpress.com/2018/02/unknown-12.jpeg"
                        },
                        new
                        {
                            Id = "da9ef59d-7f71-4631-bda5-878e410c4e7f",
                            Motto = "The White Russian is the favourite drink of Jeffrey \"The Dude\" Lebowski, the main character of the 1998 film, \"The Big Lebowski\".",
                            Name = "White Russian",
                            NotAvailable = false,
                            PicUrl = "https://images2.minutemediacdn.com/image/upload/c_fill,g_auto,h_1248,w_2220/f_auto,q_auto,w_1100/v1555340239/shape/mentalfloss/istock_000065613079_small.jpg"
                        },
                        new
                        {
                            Id = "957de258-83ae-4314-a015-6014a3f312d5",
                            Motto = "B-52 carries up to 70,000 pounds of weapons.",
                            Name = "B-52",
                            NotAvailable = false,
                            PicUrl = "https://casaveneracion.com/wp-content/uploads/2010/09/absinthe-b55.jpg"
                        },
                        new
                        {
                            Id = "aa0976da-4b5a-4b80-b7d0-c456c6be594d",
                            Motto = "Some cocktail experts argue that rye whisky makes the best Manhattans, as opposed to Bourbon",
                            Name = "Manhattan",
                            NotAvailable = false,
                            PicUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQstaIovPmxlc5PnPTQ4n4P2kWnWv3ImmqiCSWKoswE5oSk2Nva&s"
                        },
                        new
                        {
                            Id = "4fae34e6-e1a1-462b-9e52-9e851079b41e",
                            Motto = "In the 2006 movie \"Miami Vice\" lead character Crockett is seen drinking a Mojito from the bartender in the very first scene.",
                            Name = "Mojito",
                            NotAvailable = false,
                            PicUrl = "https://www.thespruceeats.com/thmb/uph9GgtfGnN3rlLSEaP1WhYI2Ag=/1000x562/smart/filters:no_upscale()/mojito-5a8f339fba61770036ec61d8.jpg"
                        });
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailBar", b =>
                {
                    b.Property<string>("CocktailId");

                    b.Property<string>("BarId");

                    b.HasKey("CocktailId", "BarId");

                    b.HasIndex("BarId");

                    b.ToTable("CocktailBars");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailComment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CocktailId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CocktailId");

                    b.HasIndex("UserId");

                    b.ToTable("CocktailComments");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailIngredient", b =>
                {
                    b.Property<string>("CocktailId");

                    b.Property<string>("IngredientId");

                    b.Property<string>("Quantity")
                        .IsRequired();

                    b.HasKey("CocktailId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("CocktailIngredients");

                    b.HasData(
                        new
                        {
                            CocktailId = "26531c92-59cd-4503-86c9-17ab02d0e4c1",
                            IngredientId = "8a26e862-811d-4053-bb2d-59587bb48188",
                            Quantity = "60"
                        },
                        new
                        {
                            CocktailId = "26531c92-59cd-4503-86c9-17ab02d0e4c1",
                            IngredientId = "6c9dea74-cb47-4d4a-81ec-c21b1aec70ee",
                            Quantity = "60"
                        },
                        new
                        {
                            CocktailId = "77c8a1f5-66f6-4c5d-b06d-1ad0cdd1097d",
                            IngredientId = "dff51835-fdd3-4695-9954-28da0435ac7a",
                            Quantity = "37"
                        },
                        new
                        {
                            CocktailId = "77c8a1f5-66f6-4c5d-b06d-1ad0cdd1097d",
                            IngredientId = "703d3be1-ce27-483b-ad61-130b5500d368",
                            Quantity = "12"
                        },
                        new
                        {
                            CocktailId = "77c8a1f5-66f6-4c5d-b06d-1ad0cdd1097d",
                            IngredientId = "42304a2b-6806-4c5d-80a2-a2a50ae21b70",
                            Quantity = "30"
                        },
                        new
                        {
                            CocktailId = "77c8a1f5-66f6-4c5d-b06d-1ad0cdd1097d",
                            IngredientId = "7aff3750-c7bd-412b-b869-f28f3d44d046",
                            Quantity = "12"
                        },
                        new
                        {
                            CocktailId = "77c8a1f5-66f6-4c5d-b06d-1ad0cdd1097d",
                            IngredientId = "3caa9be9-e557-40b6-a9fe-f31bdadcdb2f",
                            Quantity = "3"
                        },
                        new
                        {
                            CocktailId = "11b8db86-d375-4cde-81c5-66be2938acdd",
                            IngredientId = "96d08841-a7ed-4eca-9f3f-72c2a777a167",
                            Quantity = "50"
                        },
                        new
                        {
                            CocktailId = "11b8db86-d375-4cde-81c5-66be2938acdd",
                            IngredientId = "416809dc-3855-4bbf-8341-f3b4811d90bd",
                            Quantity = "7.5"
                        },
                        new
                        {
                            CocktailId = "11b8db86-d375-4cde-81c5-66be2938acdd",
                            IngredientId = "d12faec1-8f1d-41b8-ab00-5aa9e8f9c7cb",
                            Quantity = "25"
                        },
                        new
                        {
                            CocktailId = "ff98b546-3f4d-486c-acaf-6da5a2d1f4fc",
                            IngredientId = "416809dc-3855-4bbf-8341-f3b4811d90bd",
                            Quantity = "5"
                        },
                        new
                        {
                            CocktailId = "ff98b546-3f4d-486c-acaf-6da5a2d1f4fc",
                            IngredientId = "e75bf641-54f4-474f-a7d7-3faaaf53759a",
                            Quantity = "50"
                        },
                        new
                        {
                            CocktailId = "ff98b546-3f4d-486c-acaf-6da5a2d1f4fc",
                            IngredientId = "42252d46-40cc-48b5-b594-3a7ec63ba985",
                            Quantity = "1"
                        },
                        new
                        {
                            CocktailId = "ff98b546-3f4d-486c-acaf-6da5a2d1f4fc",
                            IngredientId = "7d2c7d7d-4836-4b7a-8806-874bfe63fabf",
                            Quantity = "1"
                        },
                        new
                        {
                            CocktailId = "42cd2509-9e0d-4451-b20b-4822931ac723",
                            IngredientId = "d6d57e51-bc61-4c4c-87cc-2a3cd7e440b5",
                            Quantity = "37 1/2"
                        },
                        new
                        {
                            CocktailId = "42cd2509-9e0d-4451-b20b-4822931ac723",
                            IngredientId = "348b2dfc-9b80-4e6c-9709-e25a25195530",
                            Quantity = "12 1/2"
                        },
                        new
                        {
                            CocktailId = "42cd2509-9e0d-4451-b20b-4822931ac723",
                            IngredientId = "a5d0b498-9470-4281-93f0-d38f3e456d8a",
                            Quantity = "30"
                        },
                        new
                        {
                            CocktailId = "42cd2509-9e0d-4451-b20b-4822931ac723",
                            IngredientId = "7aff3750-c7bd-412b-b869-f28f3d44d046",
                            Quantity = "12 1/2"
                        },
                        new
                        {
                            CocktailId = "da9ef59d-7f71-4631-bda5-878e410c4e7f",
                            IngredientId = "dcb14d4d-6329-4641-bdd1-b02b7174ddcf",
                            Quantity = "37 1/2"
                        },
                        new
                        {
                            CocktailId = "da9ef59d-7f71-4631-bda5-878e410c4e7f",
                            IngredientId = "85ee0d01-72fe-4fea-a1e8-3a31471110cf",
                            Quantity = "25"
                        },
                        new
                        {
                            CocktailId = "da9ef59d-7f71-4631-bda5-878e410c4e7f",
                            IngredientId = "1adb7444-06eb-42a2-9783-98788907bfa6",
                            Quantity = "15"
                        },
                        new
                        {
                            CocktailId = "da9ef59d-7f71-4631-bda5-878e410c4e7f",
                            IngredientId = "faeb50b9-c23f-4cc3-b8ed-f41f8d19eb38",
                            Quantity = "15"
                        },
                        new
                        {
                            CocktailId = "da9ef59d-7f71-4631-bda5-878e410c4e7f",
                            IngredientId = "3caa9be9-e557-40b6-a9fe-f31bdadcdb2f",
                            Quantity = "1"
                        },
                        new
                        {
                            CocktailId = "957de258-83ae-4314-a015-6014a3f312d5",
                            IngredientId = "85ee0d01-72fe-4fea-a1e8-3a31471110cf",
                            Quantity = "10"
                        },
                        new
                        {
                            CocktailId = "957de258-83ae-4314-a015-6014a3f312d5",
                            IngredientId = "f885192f-3a79-4109-aa1d-313d5ee2291a",
                            Quantity = "10"
                        },
                        new
                        {
                            CocktailId = "957de258-83ae-4314-a015-6014a3f312d5",
                            IngredientId = "348b2dfc-9b80-4e6c-9709-e25a25195530",
                            Quantity = "10"
                        },
                        new
                        {
                            CocktailId = "aa0976da-4b5a-4b80-b7d0-c456c6be594d",
                            IngredientId = "e75bf641-54f4-474f-a7d7-3faaaf53759a",
                            Quantity = "50"
                        },
                        new
                        {
                            CocktailId = "aa0976da-4b5a-4b80-b7d0-c456c6be594d",
                            IngredientId = "e66d1721-8b0b-4d52-b71d-48a0e171ecfc",
                            Quantity = "10"
                        },
                        new
                        {
                            CocktailId = "aa0976da-4b5a-4b80-b7d0-c456c6be594d",
                            IngredientId = "f6b8ead2-9bcb-437f-a079-2270a628512e",
                            Quantity = "10"
                        },
                        new
                        {
                            CocktailId = "aa0976da-4b5a-4b80-b7d0-c456c6be594d",
                            IngredientId = "42252d46-40cc-48b5-b594-3a7ec63ba985",
                            Quantity = "2"
                        },
                        new
                        {
                            CocktailId = "4fae34e6-e1a1-462b-9e52-9e851079b41e",
                            IngredientId = "599b0c7d-2c10-431b-b986-296df0a888b5",
                            Quantity = "8"
                        },
                        new
                        {
                            CocktailId = "4fae34e6-e1a1-462b-9e52-9e851079b41e",
                            IngredientId = "7aff3750-c7bd-412b-b869-f28f3d44d046",
                            Quantity = "10"
                        },
                        new
                        {
                            CocktailId = "4fae34e6-e1a1-462b-9e52-9e851079b41e",
                            IngredientId = "96d08841-a7ed-4eca-9f3f-72c2a777a167",
                            Quantity = "50"
                        },
                        new
                        {
                            CocktailId = "4fae34e6-e1a1-462b-9e52-9e851079b41e",
                            IngredientId = "d12faec1-8f1d-41b8-ab00-5aa9e8f9c7cb",
                            Quantity = "25"
                        });
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailRating", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("CocktailId");

                    b.Property<string>("Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserId", "CocktailId");

                    b.HasIndex("CocktailId");

                    b.ToTable("CocktailRatings");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.Ingredient", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UnitType");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = "0af163c4-6210-4b51-9032-8cadf025083e",
                            IsDeleted = false,
                            Name = "Ground black pepper",
                            UnitType = 2
                        },
                        new
                        {
                            Id = "b46b8769-53d2-4aff-b538-f99948962172",
                            IsDeleted = false,
                            Name = "Tomato Juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "514afb68-79a8-4deb-bd9c-9d9c61afc1cb",
                            IsDeleted = false,
                            Name = "Hot sauce",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "7aab7c85-626f-4509-a357-56050fbe66e4",
                            IsDeleted = false,
                            Name = "Worcestershire sauce",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "e045e88a-0151-4394-bd23-62622f3335ff",
                            IsDeleted = false,
                            Name = "Lemon juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "8a26e862-811d-4053-bb2d-59587bb48188",
                            IsDeleted = false,
                            Name = "Gin Bombay Sapphire",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "6c9dea74-cb47-4d4a-81ec-c21b1aec70ee",
                            IsDeleted = false,
                            Name = "Martini ",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "dcb14d4d-6329-4641-bdd1-b02b7174ddcf",
                            IsDeleted = false,
                            Name = "Vodka",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "2a34f05b-192a-46be-986a-3f23afa66a65",
                            IsDeleted = false,
                            Name = "Tequila",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "cf9db0c7-b266-4238-9b14-2e0b89cda8ef",
                            IsDeleted = false,
                            Name = "Gin",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "9dc9533e-6aa5-4483-8613-e7160a17547d",
                            IsDeleted = false,
                            Name = "Tonik",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "f99c65e7-fb0b-4723-a3d5-8ac05a8ba1e4",
                            IsDeleted = false,
                            Name = "CocaCola",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "a69c54ff-8e93-4181-8998-b4de42304075",
                            IsDeleted = false,
                            Name = "Soda",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "6fe3620d-87be-4773-90c1-d0a072f0c838",
                            IsDeleted = false,
                            Name = "Wiskey",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "b96ae8b3-7fad-406c-97d2-bc5e6dcc0d8c",
                            IsDeleted = false,
                            Name = "Red Bull",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "07ee6b8c-8986-4886-bbfd-cdca6e52a5df",
                            IsDeleted = false,
                            Name = "Water",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "d82e5701-27e5-45a2-955d-01d1071fce02",
                            IsDeleted = false,
                            Name = "Banana Juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "44ebac14-88ca-404f-87e6-ee0f3d3c180e",
                            IsDeleted = false,
                            Name = "Orange Juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "3fea7311-64e6-4325-af27-28cb41a5cf2c",
                            IsDeleted = false,
                            Name = "Salt",
                            UnitType = 3
                        },
                        new
                        {
                            Id = "6852531d-f7ca-4c05-8b02-019a3ac53737",
                            IsDeleted = false,
                            Name = "Cinnamon",
                            UnitType = 3
                        },
                        new
                        {
                            Id = "00b7970b-96e4-49ee-97c0-896871d4bd9f",
                            IsDeleted = false,
                            Name = "Ice",
                            UnitType = 2
                        },
                        new
                        {
                            Id = "6e3634b2-518f-40e2-ac20-1bf56297364a",
                            IsDeleted = false,
                            Name = "Olive",
                            UnitType = 2
                        },
                        new
                        {
                            Id = "dff51835-fdd3-4695-9954-28da0435ac7a",
                            IsDeleted = false,
                            Name = "Vanila Vodka",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "703d3be1-ce27-483b-ad61-130b5500d368",
                            IsDeleted = false,
                            Name = "Kahlua",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "42304a2b-6806-4c5d-80a2-a2a50ae21b70",
                            IsDeleted = false,
                            Name = "Esspresso",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "7aff3750-c7bd-412b-b869-f28f3d44d046",
                            IsDeleted = false,
                            Name = "Sugar Syrop",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "3caa9be9-e557-40b6-a9fe-f31bdadcdb2f",
                            IsDeleted = false,
                            Name = "Coffee Beans",
                            UnitType = 2
                        },
                        new
                        {
                            Id = "96d08841-a7ed-4eca-9f3f-72c2a777a167",
                            IsDeleted = false,
                            Name = "White rum",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "599b0c7d-2c10-431b-b986-296df0a888b5",
                            IsDeleted = false,
                            Name = "Mint Leaves",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "d12faec1-8f1d-41b8-ab00-5aa9e8f9c7cb",
                            IsDeleted = false,
                            Name = "Lime Juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "2a1498fb-00ce-4363-af6c-2ade242ce8bf",
                            IsDeleted = false,
                            Name = "Mint sprigs",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "416809dc-3855-4bbf-8341-f3b4811d90bd",
                            IsDeleted = false,
                            Name = "Sugar",
                            UnitType = 3
                        },
                        new
                        {
                            Id = "e75bf641-54f4-474f-a7d7-3faaaf53759a",
                            IsDeleted = false,
                            Name = "Bourbon",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "42252d46-40cc-48b5-b594-3a7ec63ba985",
                            IsDeleted = false,
                            Name = "Angostura Bitters",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "7d2c7d7d-4836-4b7a-8806-874bfe63fabf",
                            IsDeleted = false,
                            Name = "Orange Bitters",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "d6d57e51-bc61-4c4c-87cc-2a3cd7e440b5",
                            IsDeleted = false,
                            Name = "Citrus Vodka",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "348b2dfc-9b80-4e6c-9709-e25a25195530",
                            IsDeleted = false,
                            Name = "Triple Sec",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "a5d0b498-9470-4281-93f0-d38f3e456d8a",
                            IsDeleted = false,
                            Name = "Cranberry Juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "85ee0d01-72fe-4fea-a1e8-3a31471110cf",
                            IsDeleted = false,
                            Name = "Coffee Liqueur",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "1adb7444-06eb-42a2-9783-98788907bfa6",
                            IsDeleted = false,
                            Name = "Cream",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "faeb50b9-c23f-4cc3-b8ed-f41f8d19eb38",
                            IsDeleted = false,
                            Name = "Milk",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "bec1efc2-cfc4-4297-9353-e2d90cedbcfc",
                            IsDeleted = false,
                            Name = "Pineapple Juice",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "c6b27053-e9f4-4907-a618-81410763ef65",
                            IsDeleted = false,
                            Name = "Coconut Cream",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "2ca0b8ed-3d8f-4a91-a3b3-c55a4e947a56",
                            IsDeleted = false,
                            Name = "Simple Syrup",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "1f1fbb0a-35a5-4ae5-b17a-5a5e1393f674",
                            IsDeleted = false,
                            Name = "Dark Rum",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "e66d1721-8b0b-4d52-b71d-48a0e171ecfc",
                            IsDeleted = false,
                            Name = "Sweet Vermouth",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "f6b8ead2-9bcb-437f-a079-2270a628512e",
                            IsDeleted = false,
                            Name = "Dry Vermouth",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "26848428-7ed4-4aa7-96b0-75f72bf90285",
                            IsDeleted = false,
                            Name = "Gomme Syrup",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "dddb8073-93b0-43dc-889c-d83dd3c7ffe8",
                            IsDeleted = false,
                            Name = "Amaretto",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "b9ba6611-eeab-45ae-9b94-399c1ce2b541",
                            IsDeleted = false,
                            Name = "Egg-White",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "2ca497aa-5518-4282-9e17-eb976cbd9728",
                            IsDeleted = false,
                            Name = "Bacardi Rum",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "cda1210e-5bfd-4314-aa3a-359f37f8e3ea",
                            IsDeleted = false,
                            Name = "Strawberry Liqueur",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "f885192f-3a79-4109-aa1d-313d5ee2291a",
                            IsDeleted = false,
                            Name = "Cream Liqueur",
                            UnitType = 1
                        },
                        new
                        {
                            Id = "f11fa0c5-0203-486b-9592-21f7aa58d6b2",
                            IsDeleted = false,
                            Name = "Irish Cream Liqueur",
                            UnitType = 1
                        });
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("RoleId");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.BarComment", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.Bar", "Bar")
                        .WithMany("BarComments")
                        .HasForeignKey("BarId");

                    b.HasOne("IriOnCocktailService.Data.Entities.User", "User")
                        .WithMany("BarComments")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.BarRating", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.Bar", "Bar")
                        .WithMany("BarRatings")
                        .HasForeignKey("BarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IriOnCocktailService.Data.Entities.User", "User")
                        .WithMany("BarRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailBar", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.Bar", "Bar")
                        .WithMany("CocktailBars")
                        .HasForeignKey("BarId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IriOnCocktailService.Data.Entities.Cocktail", "Cocktail")
                        .WithMany("CocktailBars")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailComment", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.Cocktail", "Cocktail")
                        .WithMany("Comments")
                        .HasForeignKey("CocktailId");

                    b.HasOne("IriOnCocktailService.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailIngredient", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.Cocktail", "Cocktail")
                        .WithMany("CocktailIngredients")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IriOnCocktailService.Data.Entities.Ingredient", "Ingredient")
                        .WithMany("CocktailIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.CocktailRating", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.Cocktail", "Cocktail")
                        .WithMany("Ratings")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IriOnCocktailService.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IriOnCocktailService.Data.Entities.User", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IriOnCocktailService.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IriOnCocktailService.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
